// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: material.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MaterialResponse_Status int32

const (
	MaterialResponse_OK    MaterialResponse_Status = 0
	MaterialResponse_ERROR MaterialResponse_Status = 1
)

// Enum value maps for MaterialResponse_Status.
var (
	MaterialResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	MaterialResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x MaterialResponse_Status) Enum() *MaterialResponse_Status {
	p := new(MaterialResponse_Status)
	*p = x
	return p
}

func (x MaterialResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_material_proto_enumTypes[0].Descriptor()
}

func (MaterialResponse_Status) Type() protoreflect.EnumType {
	return &file_material_proto_enumTypes[0]
}

func (x MaterialResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialResponse_Status.Descriptor instead.
func (MaterialResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{1, 0}
}

type ItemResponse_Status int32

const (
	ItemResponse_OK    ItemResponse_Status = 0
	ItemResponse_ERROR ItemResponse_Status = 1
)

// Enum value maps for ItemResponse_Status.
var (
	ItemResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	ItemResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x ItemResponse_Status) Enum() *ItemResponse_Status {
	p := new(ItemResponse_Status)
	*p = x
	return p
}

func (x ItemResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_material_proto_enumTypes[1].Descriptor()
}

func (ItemResponse_Status) Type() protoreflect.EnumType {
	return &file_material_proto_enumTypes[1]
}

func (x ItemResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemResponse_Status.Descriptor instead.
func (ItemResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{6, 0}
}

type OrderResponse_Status int32

const (
	OrderResponse_OK    OrderResponse_Status = 0
	OrderResponse_ERROR OrderResponse_Status = 1
)

// Enum value maps for OrderResponse_Status.
var (
	OrderResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	OrderResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x OrderResponse_Status) Enum() *OrderResponse_Status {
	p := new(OrderResponse_Status)
	*p = x
	return p
}

func (x OrderResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_material_proto_enumTypes[2].Descriptor()
}

func (OrderResponse_Status) Type() protoreflect.EnumType {
	return &file_material_proto_enumTypes[2]
}

func (x OrderResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderResponse_Status.Descriptor instead.
func (OrderResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{12, 0}
}

type CuttingResultResponse_Status int32

const (
	CuttingResultResponse_OK    CuttingResultResponse_Status = 0
	CuttingResultResponse_ERROR CuttingResultResponse_Status = 1
)

// Enum value maps for CuttingResultResponse_Status.
var (
	CuttingResultResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	CuttingResultResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x CuttingResultResponse_Status) Enum() *CuttingResultResponse_Status {
	p := new(CuttingResultResponse_Status)
	*p = x
	return p
}

func (x CuttingResultResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CuttingResultResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_material_proto_enumTypes[3].Descriptor()
}

func (CuttingResultResponse_Status) Type() protoreflect.EnumType {
	return &file_material_proto_enumTypes[3]
}

func (x CuttingResultResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CuttingResultResponse_Status.Descriptor instead.
func (CuttingResultResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{15, 0}
}

type PaymentStatusResponse_Status int32

const (
	PaymentStatusResponse_SUCCESS PaymentStatusResponse_Status = 0
	PaymentStatusResponse_FAILED  PaymentStatusResponse_Status = 1
	PaymentStatusResponse_PENDING PaymentStatusResponse_Status = 2
)

// Enum value maps for PaymentStatusResponse_Status.
var (
	PaymentStatusResponse_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "PENDING",
	}
	PaymentStatusResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"FAILED":  1,
		"PENDING": 2,
	}
)

func (x PaymentStatusResponse_Status) Enum() *PaymentStatusResponse_Status {
	p := new(PaymentStatusResponse_Status)
	*p = x
	return p
}

func (x PaymentStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_material_proto_enumTypes[4].Descriptor()
}

func (PaymentStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_material_proto_enumTypes[4]
}

func (x PaymentStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatusResponse_Status.Descriptor instead.
func (PaymentStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{18, 0}
}

// Material messages
type Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material_ID   uint32  `protobuf:"varint,1,opt,name=Material_ID,json=MaterialID,proto3" json:"Material_ID,omitempty"`
	Material_Name string  `protobuf:"bytes,2,opt,name=Material_Name,json=MaterialName,proto3" json:"Material_Name,omitempty"`
	Description   string  `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Stock         int32   `protobuf:"varint,4,opt,name=Stock,proto3" json:"Stock,omitempty"`
	Price         float64 `protobuf:"fixed64,5,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *Material) Reset() {
	*x = Material{}
	mi := &file_material_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material) ProtoMessage() {}

func (x *Material) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material.ProtoReflect.Descriptor instead.
func (*Material) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{0}
}

func (x *Material) GetMaterial_ID() uint32 {
	if x != nil {
		return x.Material_ID
	}
	return 0
}

func (x *Material) GetMaterial_Name() string {
	if x != nil {
		return x.Material_Name
	}
	return ""
}

func (x *Material) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Material) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Material) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type MaterialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  MaterialResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.MaterialResponse_Status" json:"status,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*MaterialResponse_Error
	//	*MaterialResponse_Data
	Payload isMaterialResponse_Payload `protobuf_oneof:"payload"`
}

func (x *MaterialResponse) Reset() {
	*x = MaterialResponse{}
	mi := &file_material_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialResponse) ProtoMessage() {}

func (x *MaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialResponse.ProtoReflect.Descriptor instead.
func (*MaterialResponse) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{1}
}

func (x *MaterialResponse) GetStatus() MaterialResponse_Status {
	if x != nil {
		return x.Status
	}
	return MaterialResponse_OK
}

func (x *MaterialResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *MaterialResponse) GetPayload() isMaterialResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *MaterialResponse) GetError() string {
	if x, ok := x.GetPayload().(*MaterialResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *MaterialResponse) GetData() string {
	if x, ok := x.GetPayload().(*MaterialResponse_Data); ok {
		return x.Data
	}
	return ""
}

type isMaterialResponse_Payload interface {
	isMaterialResponse_Payload()
}

type MaterialResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type MaterialResponse_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*MaterialResponse_Error) isMaterialResponse_Payload() {}

func (*MaterialResponse_Data) isMaterialResponse_Payload() {}

type MaterialNoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MaterialNoParams) Reset() {
	*x = MaterialNoParams{}
	mi := &file_material_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaterialNoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialNoParams) ProtoMessage() {}

func (x *MaterialNoParams) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialNoParams.ProtoReflect.Descriptor instead.
func (*MaterialNoParams) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{2}
}

type MaterialList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Materials []*Material `protobuf:"bytes,1,rep,name=Materials,proto3" json:"Materials,omitempty"`
}

func (x *MaterialList) Reset() {
	*x = MaterialList{}
	mi := &file_material_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaterialList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialList) ProtoMessage() {}

func (x *MaterialList) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialList.ProtoReflect.Descriptor instead.
func (*MaterialList) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{3}
}

func (x *MaterialList) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

type MaterialID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` // Corrected typo
}

func (x *MaterialID) Reset() {
	*x = MaterialID{}
	mi := &file_material_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaterialID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialID) ProtoMessage() {}

func (x *MaterialID) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialID.ProtoReflect.Descriptor instead.
func (*MaterialID) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{4}
}

func (x *MaterialID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

// Item messages
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item_ID         uint32  `protobuf:"varint,1,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
	Item_Name       string  `protobuf:"bytes,2,opt,name=Item_Name,json=ItemName,proto3" json:"Item_Name,omitempty"`
	Material_ID     uint32  `protobuf:"varint,3,opt,name=Material_ID,json=MaterialID,proto3" json:"Material_ID,omitempty"`
	Length          uint32  `protobuf:"varint,4,opt,name=Length,proto3" json:"Length,omitempty"`
	Width           uint32  `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
	Fixed_Size_ID   uint32  `protobuf:"varint,6,opt,name=Fixed_Size_ID,json=FixedSizeID,proto3" json:"Fixed_Size_ID,omitempty"`
	Is_Custom       bool    `protobuf:"varint,7,opt,name=Is_Custom,json=IsCustom,proto3" json:"Is_Custom,omitempty"`
	Estimated_Price float32 `protobuf:"fixed32,8,opt,name=Estimated_Price,json=EstimatedPrice,proto3" json:"Estimated_Price,omitempty"`
	User_ID         uint32  `protobuf:"varint,9,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_material_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{5}
}

func (x *Item) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

func (x *Item) GetItem_Name() string {
	if x != nil {
		return x.Item_Name
	}
	return ""
}

func (x *Item) GetMaterial_ID() uint32 {
	if x != nil {
		return x.Material_ID
	}
	return 0
}

func (x *Item) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Item) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Item) GetFixed_Size_ID() uint32 {
	if x != nil {
		return x.Fixed_Size_ID
	}
	return 0
}

func (x *Item) GetIs_Custom() bool {
	if x != nil {
		return x.Is_Custom
	}
	return false
}

func (x *Item) GetEstimated_Price() float32 {
	if x != nil {
		return x.Estimated_Price
	}
	return 0
}

func (x *Item) GetUser_ID() uint32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

type ItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ItemResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.ItemResponse_Status" json:"status,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ItemResponse_Error
	//	*ItemResponse_Data
	Payload isItemResponse_Payload `protobuf_oneof:"payload"`
}

func (x *ItemResponse) Reset() {
	*x = ItemResponse{}
	mi := &file_material_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResponse) ProtoMessage() {}

func (x *ItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResponse.ProtoReflect.Descriptor instead.
func (*ItemResponse) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{6}
}

func (x *ItemResponse) GetStatus() ItemResponse_Status {
	if x != nil {
		return x.Status
	}
	return ItemResponse_OK
}

func (x *ItemResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *ItemResponse) GetPayload() isItemResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ItemResponse) GetError() string {
	if x, ok := x.GetPayload().(*ItemResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *ItemResponse) GetData() string {
	if x, ok := x.GetPayload().(*ItemResponse_Data); ok {
		return x.Data
	}
	return ""
}

type isItemResponse_Payload interface {
	isItemResponse_Payload()
}

type ItemResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type ItemResponse_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*ItemResponse_Error) isItemResponse_Payload() {}

func (*ItemResponse_Data) isItemResponse_Payload() {}

type ItemID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` // Corrected typo
}

func (x *ItemID) Reset() {
	*x = ItemID{}
	mi := &file_material_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemID) ProtoMessage() {}

func (x *ItemID) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemID.ProtoReflect.Descriptor instead.
func (*ItemID) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{7}
}

func (x *ItemID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *ItemList) Reset() {
	*x = ItemList{}
	mi := &file_material_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemList) ProtoMessage() {}

func (x *ItemList) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemList.ProtoReflect.Descriptor instead.
func (*ItemList) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{8}
}

func (x *ItemList) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ItemNoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemNoParams) Reset() {
	*x = ItemNoParams{}
	mi := &file_material_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemNoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemNoParams) ProtoMessage() {}

func (x *ItemNoParams) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemNoParams.ProtoReflect.Descriptor instead.
func (*ItemNoParams) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{9}
}

// Order messages
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order_ID   uint32  `protobuf:"varint,1,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
	User_ID    uint32  `protobuf:"varint,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Item_ID    uint32  `protobuf:"varint,3,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
	Quantity   int32   `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Status     string  `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	CustomCut  string  `protobuf:"bytes,6,opt,name=Custom_cut,json=CustomCut,proto3" json:"Custom_cut,omitempty"`
	Is_Custom  bool    `protobuf:"varint,7,opt,name=Is_Custom,json=IsCustom,proto3" json:"Is_Custom,omitempty"`
	Amount     float64 `protobuf:"fixed64,8,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Payment_ID string  `protobuf:"bytes,9,opt,name=Payment_ID,json=PaymentID,proto3" json:"Payment_ID,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_material_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{10}
}

func (x *Order) GetOrder_ID() uint32 {
	if x != nil {
		return x.Order_ID
	}
	return 0
}

func (x *Order) GetUser_ID() uint32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *Order) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

func (x *Order) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetCustomCut() string {
	if x != nil {
		return x.CustomCut
	}
	return ""
}

func (x *Order) GetIs_Custom() bool {
	if x != nil {
		return x.Is_Custom
	}
	return false
}

func (x *Order) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetPayment_ID() string {
	if x != nil {
		return x.Payment_ID
	}
	return ""
}

type OrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=Orders,proto3" json:"Orders,omitempty"`
}

func (x *OrderList) Reset() {
	*x = OrderList{}
	mi := &file_material_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderList) ProtoMessage() {}

func (x *OrderList) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderList.ProtoReflect.Descriptor instead.
func (*OrderList) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{11}
}

func (x *OrderList) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  OrderResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.OrderResponse_Status" json:"status,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*OrderResponse_Error
	//	*OrderResponse_Data
	Payload isOrderResponse_Payload `protobuf_oneof:"payload"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	mi := &file_material_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{12}
}

func (x *OrderResponse) GetStatus() OrderResponse_Status {
	if x != nil {
		return x.Status
	}
	return OrderResponse_OK
}

func (x *OrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *OrderResponse) GetPayload() isOrderResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *OrderResponse) GetError() string {
	if x, ok := x.GetPayload().(*OrderResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *OrderResponse) GetData() string {
	if x, ok := x.GetPayload().(*OrderResponse_Data); ok {
		return x.Data
	}
	return ""
}

type isOrderResponse_Payload interface {
	isOrderResponse_Payload()
}

type OrderResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type OrderResponse_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*OrderResponse_Error) isOrderResponse_Payload() {}

func (*OrderResponse_Data) isOrderResponse_Payload() {}

// CuttingResult
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material_ID   uint32 `protobuf:"varint,1,opt,name=Material_ID,json=MaterialID,proto3" json:"Material_ID,omitempty"`
	DoorPanel     string `protobuf:"bytes,2,opt,name=DoorPanel,proto3" json:"DoorPanel,omitempty"`
	BackSidePanel string `protobuf:"bytes,3,opt,name=BackSidePanel,proto3" json:"BackSidePanel,omitempty"`
	SidePanel     string `protobuf:"bytes,4,opt,name=SidePanel,proto3" json:"SidePanel,omitempty"`
	TopPanel      string `protobuf:"bytes,5,opt,name=TopPanel,proto3" json:"TopPanel,omitempty"`
	BottomPanel   string `protobuf:"bytes,6,opt,name=BottomPanel,proto3" json:"BottomPanel,omitempty"`
	ShelvesPanel  string `protobuf:"bytes,7,opt,name=ShelvesPanel,proto3" json:"ShelvesPanel,omitempty"`
	Panel_Count   int32  `protobuf:"varint,8,opt,name=Panel_Count,json=PanelCount,proto3" json:"Panel_Count,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	mi := &file_material_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{13}
}

func (x *Component) GetMaterial_ID() uint32 {
	if x != nil {
		return x.Material_ID
	}
	return 0
}

func (x *Component) GetDoorPanel() string {
	if x != nil {
		return x.DoorPanel
	}
	return ""
}

func (x *Component) GetBackSidePanel() string {
	if x != nil {
		return x.BackSidePanel
	}
	return ""
}

func (x *Component) GetSidePanel() string {
	if x != nil {
		return x.SidePanel
	}
	return ""
}

func (x *Component) GetTopPanel() string {
	if x != nil {
		return x.TopPanel
	}
	return ""
}

func (x *Component) GetBottomPanel() string {
	if x != nil {
		return x.BottomPanel
	}
	return ""
}

func (x *Component) GetShelvesPanel() string {
	if x != nil {
		return x.ShelvesPanel
	}
	return ""
}

func (x *Component) GetPanel_Count() int32 {
	if x != nil {
		return x.Panel_Count
	}
	return 0
}

type CuttingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item_ID    uint32       `protobuf:"varint,1,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
	Components []*Component `protobuf:"bytes,2,rep,name=Components,proto3" json:"Components,omitempty"`
}

func (x *CuttingResult) Reset() {
	*x = CuttingResult{}
	mi := &file_material_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CuttingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CuttingResult) ProtoMessage() {}

func (x *CuttingResult) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CuttingResult.ProtoReflect.Descriptor instead.
func (*CuttingResult) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{14}
}

func (x *CuttingResult) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

func (x *CuttingResult) GetComponents() []*Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type CuttingResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        CuttingResultResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.CuttingResultResponse_Status" json:"status,omitempty"`
	Message       string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CuttingResult *CuttingResult               `protobuf:"bytes,3,opt,name=cutting_result,json=cuttingResult,proto3" json:"cutting_result,omitempty"`
}

func (x *CuttingResultResponse) Reset() {
	*x = CuttingResultResponse{}
	mi := &file_material_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CuttingResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CuttingResultResponse) ProtoMessage() {}

func (x *CuttingResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CuttingResultResponse.ProtoReflect.Descriptor instead.
func (*CuttingResultResponse) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{15}
}

func (x *CuttingResultResponse) GetStatus() CuttingResultResponse_Status {
	if x != nil {
		return x.Status
	}
	return CuttingResultResponse_OK
}

func (x *CuttingResultResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CuttingResultResponse) GetCuttingResult() *CuttingResult {
	if x != nil {
		return x.CuttingResult
	}
	return nil
}

// Payment
type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item_ID    uint32  `protobuf:"varint,1,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
	User_Name  string  `protobuf:"bytes,2,opt,name=User_Name,json=UserName,proto3" json:"User_Name,omitempty"`
	User_Email string  `protobuf:"bytes,3,opt,name=User_Email,json=UserEmail,proto3" json:"User_Email,omitempty"`
	Amount     float32 `protobuf:"fixed32,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Order_ID   string  `protobuf:"bytes,5,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	mi := &file_material_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{16}
}

func (x *PaymentResponse) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

func (x *PaymentResponse) GetUser_Name() string {
	if x != nil {
		return x.User_Name
	}
	return ""
}

func (x *PaymentResponse) GetUser_Email() string {
	if x != nil {
		return x.User_Email
	}
	return ""
}

func (x *PaymentResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentResponse) GetOrder_ID() string {
	if x != nil {
		return x.Order_ID
	}
	return ""
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User_ID    uint32  `protobuf:"varint,1,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Payment_ID string  `protobuf:"bytes,2,opt,name=Payment_ID,json=PaymentID,proto3" json:"Payment_ID,omitempty"`
	Amount     float32 `protobuf:"fixed32,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Item_ID    uint32  `protobuf:"varint,4,opt,name=Item_ID,json=ItemID,proto3" json:"Item_ID,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	mi := &file_material_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{17}
}

func (x *Payment) GetUser_ID() uint32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *Payment) GetPayment_ID() string {
	if x != nil {
		return x.Payment_ID
	}
	return ""
}

func (x *Payment) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetItem_ID() uint32 {
	if x != nil {
		return x.Item_ID
	}
	return 0
}

type PaymentStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  PaymentStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.PaymentStatusResponse_Status" json:"status,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PaymentStatusResponse) Reset() {
	*x = PaymentStatusResponse{}
	mi := &file_material_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentStatusResponse) ProtoMessage() {}

func (x *PaymentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_material_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentStatusResponse.ProtoReflect.Descriptor instead.
func (*PaymentStatusResponse) Descriptor() ([]byte, []int) {
	return file_material_proto_rawDescGZIP(), []int{18}
}

func (x *PaymentStatusResponse) GetStatus() PaymentStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return PaymentStatusResponse_SUCCESS
}

func (x *PaymentStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_material_proto protoreflect.FileDescriptor

var file_material_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x9e, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x23, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x12, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x3a, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x1c, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x8e, 0x02,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12,
	0x1b, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x5f, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x44, 0x12,
	0x1b, 0x0a, 0x09, 0x49, 0x73, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x0f,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xaf,
	0x01, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x18, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x49, 0x73, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x6f, 0x6f, 0x72, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x6f, 0x6f, 0x72,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x53, 0x69, 0x64,
	0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x61,
	0x63, 0x6b, 0x53, 0x69, 0x64, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x69, 0x64, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x69, 0x64, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x70,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x6f, 0x70,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x68, 0x65, 0x6c, 0x76,
	0x65, 0x73, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53,
	0x68, 0x65, 0x6c, 0x76, 0x65, 0x73, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x0d,
	0x63, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x43, 0x75, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x63, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x63, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d,
	0x63, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x5f,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x72, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x32, 0xcb, 0x05, 0x0a, 0x0f, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x10,
	0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x44,
	0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x39,
	0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x1a, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x09, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_material_proto_rawDescOnce sync.Once
	file_material_proto_rawDescData = file_material_proto_rawDesc
)

func file_material_proto_rawDescGZIP() []byte {
	file_material_proto_rawDescOnce.Do(func() {
		file_material_proto_rawDescData = protoimpl.X.CompressGZIP(file_material_proto_rawDescData)
	})
	return file_material_proto_rawDescData
}

var file_material_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_material_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_material_proto_goTypes = []any{
	(MaterialResponse_Status)(0),      // 0: pb.MaterialResponse.Status
	(ItemResponse_Status)(0),          // 1: pb.ItemResponse.Status
	(OrderResponse_Status)(0),         // 2: pb.OrderResponse.Status
	(CuttingResultResponse_Status)(0), // 3: pb.CuttingResultResponse.Status
	(PaymentStatusResponse_Status)(0), // 4: pb.PaymentStatusResponse.Status
	(*Material)(nil),                  // 5: pb.Material
	(*MaterialResponse)(nil),          // 6: pb.MaterialResponse
	(*MaterialNoParams)(nil),          // 7: pb.MaterialNoParams
	(*MaterialList)(nil),              // 8: pb.MaterialList
	(*MaterialID)(nil),                // 9: pb.MaterialID
	(*Item)(nil),                      // 10: pb.Item
	(*ItemResponse)(nil),              // 11: pb.ItemResponse
	(*ItemID)(nil),                    // 12: pb.ItemID
	(*ItemList)(nil),                  // 13: pb.ItemList
	(*ItemNoParams)(nil),              // 14: pb.ItemNoParams
	(*Order)(nil),                     // 15: pb.Order
	(*OrderList)(nil),                 // 16: pb.OrderList
	(*OrderResponse)(nil),             // 17: pb.OrderResponse
	(*Component)(nil),                 // 18: pb.Component
	(*CuttingResult)(nil),             // 19: pb.cuttingResult
	(*CuttingResultResponse)(nil),     // 20: pb.CuttingResultResponse
	(*PaymentResponse)(nil),           // 21: pb.PaymentResponse
	(*Payment)(nil),                   // 22: pb.Payment
	(*PaymentStatusResponse)(nil),     // 23: pb.PaymentStatusResponse
}
var file_material_proto_depIdxs = []int32{
	0,  // 0: pb.MaterialResponse.status:type_name -> pb.MaterialResponse.Status
	5,  // 1: pb.MaterialList.Materials:type_name -> pb.Material
	1,  // 2: pb.ItemResponse.status:type_name -> pb.ItemResponse.Status
	10, // 3: pb.ItemList.Items:type_name -> pb.Item
	15, // 4: pb.OrderList.Orders:type_name -> pb.Order
	2,  // 5: pb.OrderResponse.status:type_name -> pb.OrderResponse.Status
	18, // 6: pb.cuttingResult.Components:type_name -> pb.Component
	3,  // 7: pb.CuttingResultResponse.status:type_name -> pb.CuttingResultResponse.Status
	19, // 8: pb.CuttingResultResponse.cutting_result:type_name -> pb.cuttingResult
	4,  // 9: pb.PaymentStatusResponse.status:type_name -> pb.PaymentStatusResponse.Status
	9,  // 10: pb.MaterialService.FindMaterialByID:input_type -> pb.MaterialID
	7,  // 11: pb.MaterialService.FindAllMaterial:input_type -> pb.MaterialNoParams
	10, // 12: pb.MaterialService.AddItem:input_type -> pb.Item
	12, // 13: pb.MaterialService.FindItemByID:input_type -> pb.ItemID
	12, // 14: pb.MaterialService.FindAllItemByUser:input_type -> pb.ItemID
	14, // 15: pb.MaterialService.FindAllItem:input_type -> pb.ItemNoParams
	10, // 16: pb.MaterialService.EditItem:input_type -> pb.Item
	12, // 17: pb.MaterialService.RemoveItem:input_type -> pb.ItemID
	15, // 18: pb.MaterialService.PlaceOrder:input_type -> pb.Order
	14, // 19: pb.MaterialService.OrderHistory:input_type -> pb.ItemNoParams
	12, // 20: pb.MaterialService.FindOrder:input_type -> pb.ItemID
	12, // 21: pb.MaterialService.FindOrdersByUser:input_type -> pb.ItemID
	15, // 22: pb.MaterialService.CreatePayment:input_type -> pb.Order
	22, // 23: pb.MaterialService.PaymentSuccess:input_type -> pb.Payment
	12, // 24: pb.MaterialService.GetCuttingResult:input_type -> pb.ItemID
	5,  // 25: pb.MaterialService.FindMaterialByID:output_type -> pb.Material
	8,  // 26: pb.MaterialService.FindAllMaterial:output_type -> pb.MaterialList
	11, // 27: pb.MaterialService.AddItem:output_type -> pb.ItemResponse
	10, // 28: pb.MaterialService.FindItemByID:output_type -> pb.Item
	13, // 29: pb.MaterialService.FindAllItemByUser:output_type -> pb.ItemList
	13, // 30: pb.MaterialService.FindAllItem:output_type -> pb.ItemList
	10, // 31: pb.MaterialService.EditItem:output_type -> pb.Item
	11, // 32: pb.MaterialService.RemoveItem:output_type -> pb.ItemResponse
	17, // 33: pb.MaterialService.PlaceOrder:output_type -> pb.OrderResponse
	16, // 34: pb.MaterialService.OrderHistory:output_type -> pb.OrderList
	15, // 35: pb.MaterialService.FindOrder:output_type -> pb.Order
	16, // 36: pb.MaterialService.FindOrdersByUser:output_type -> pb.OrderList
	21, // 37: pb.MaterialService.CreatePayment:output_type -> pb.PaymentResponse
	23, // 38: pb.MaterialService.PaymentSuccess:output_type -> pb.PaymentStatusResponse
	20, // 39: pb.MaterialService.GetCuttingResult:output_type -> pb.CuttingResultResponse
	25, // [25:40] is the sub-list for method output_type
	10, // [10:25] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_material_proto_init() }
func file_material_proto_init() {
	if File_material_proto != nil {
		return
	}
	file_material_proto_msgTypes[1].OneofWrappers = []any{
		(*MaterialResponse_Error)(nil),
		(*MaterialResponse_Data)(nil),
	}
	file_material_proto_msgTypes[6].OneofWrappers = []any{
		(*ItemResponse_Error)(nil),
		(*ItemResponse_Data)(nil),
	}
	file_material_proto_msgTypes[12].OneofWrappers = []any{
		(*OrderResponse_Error)(nil),
		(*OrderResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_material_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_material_proto_goTypes,
		DependencyIndexes: file_material_proto_depIdxs,
		EnumInfos:         file_material_proto_enumTypes,
		MessageInfos:      file_material_proto_msgTypes,
	}.Build()
	File_material_proto = out.File
	file_material_proto_rawDesc = nil
	file_material_proto_goTypes = nil
	file_material_proto_depIdxs = nil
}
