syntax = "proto3";

package pb;

option go_package = "./";

service  UserService {
    rpc UserSignup(Signup) returns(Response);
    rpc VerifyUser(OTP) returns(Response);
    rpc UserLogin(Login) returns(Response);
    rpc ViewProfile(ID)returns(Profile);
    rpc EditProftle(Profile)returns(Profile);
    rpc ChangePassword(Password)returns(Response);
    rpc AddAddress(Address) returns(Response);
    rpc ViewAllAddress(ID) returns(AddressList);
    rpc EditAddress(Address)returns(Address);
    rpc RemoveAddress(IDs)returns(Response);
    rpc BlockUser(ID) returns(Response);
    rpc UnblockUser(ID)returns(Response);
    rpc UserList(NoParam) returns (UserListResponse);

    // Service to handle material management
    rpc FindMaterialByID(UserMaterialID) returns (UserMaterial);
    rpc FindAllMaterial(NoParam) returns (UserMaterialList);

    // Service to handle item management
    rpc AddItem(UserItem) returns (Response);
    rpc FindItemByID(UserItemID) returns (UserItem);
    rpc FindAllItem(NoParam) returns (UserItemList);
    rpc EditItem(UserItem) returns (UserItem);
    rpc RemoveItem(UserItemID) returns (Response);

    // Service to handle orders
    rpc PlaceOrder(UserOrder)returns(Response);
    rpc OrderHistory(NoParam) returns (UserOrderList);
    rpc FindOrder(UserItemID) returns (UserOrder);
}

message NoParam {}

message Response {
    enum Status {
        OK = 0;
        ERROR = 1;
    }
    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        string data = 4;
    }
}

message Signup{
    string First_Name = 1;
    string Last_Name = 2;
    string Phone = 3;
    string Email = 4;
    string Password = 5;
}

message OTP{
    string Email = 1;
    string Otp = 2;
}

message Login{
    string Email = 1;
    string Password = 2;
}
message ID{
    uint32 ID = 1;
}

message IDs {
    uint32 ID = 1;
    uint32 User_ID = 2;
}

message Profile{
    uint32 User_ID = 1;
    string First_Name = 2;
    string Last_Name = 3;
    string Phone = 4;
    string Email = 5;
    float Wallet = 6;
    bool Is_Blocked = 7;
}

message Address {
    uint32 ID = 7;
    uint32 User_ID = 1;
    string House = 2;
    string Street = 3;
    string City = 4;
    uint32 Zip = 5;
    string State = 6;
}

message AddressList{
    repeated Address Addresses = 1;
}

message Password {
    uint32 User_ID = 1;
    string Old_Password = 2;
    string New_Password = 3;
    string Confirm_Password = 4;
}

// Material messages
message UserMaterial {
    uint32 Material_ID = 1;
    string Material_Name = 2;
    string Description = 3;
    int32 Stock = 4;
    double Price = 5;
}

message UserMaterialList {
    repeated UserMaterial Materials = 1;
}

message UserMaterialID {
    uint32 ID = 1;  
}

// Item messages
message UserItem {
    uint32 Item_ID = 1;
    string Item_Name = 2;
    uint32 Material_ID = 3;
    uint32 Length = 4;
    uint32 Width = 5;
    uint32 Fixed_Size_ID = 6;
    bool Is_Custom = 7;
    float Estimated_Price = 8;
}


message UserItemID {
    uint32 ID = 1;  
}

message UserItemList {
    repeated UserItem Items = 1;
}

// Order messages
message UserOrder {
    uint32 Order_ID = 1;
    uint32 User_ID = 2;
    uint32 Item_ID = 3;
    int32 Quantity = 4;
    string Status = 5;
    string Custom_cut = 6;
    bool Is_Custom = 7;
    double Amount = 8;
    string Payment_ID = 9;
}

message UserOrderList {
    repeated UserOrder Orders = 1;
}


message UserListResponse {
    repeated Profile Profiles = 1;
}